{"ast":null,"code":"import _regeneratorRuntime from \"/Users/chidibangzz/official/Project_3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/chidibangzz/official/Project_3/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nvar BASEURL = \"https://rawg-video-games-database.p.rapidapi.com/games\";\nvar KEY = \"30de55f9a4mshf984d53ea08b7a7p1e945fjsnab7068fa0cce\"; // Export an object containing methods we'll use for accessing the Dog.Ceo API\n\nvar options = {\n  method: 'GET',\n  url: BASEURL,\n  headers: {\n    'x-rapidapi-key': KEY,\n    'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com'\n  }\n};\nexport default {\n  getVideoGames: function () {\n    var _getVideoGames = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", axios.request(options).then(function (response) {\n                console.log(response.data);\n              }).catch(function (error) {\n                console.error(error);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getVideoGames() {\n      return _getVideoGames.apply(this, arguments);\n    }\n\n    return getVideoGames;\n  }()\n};","map":{"version":3,"sources":["/Users/chidibangzz/official/Project_3/client/src/components/utils/API.js"],"names":["axios","BASEURL","KEY","options","method","url","headers","getVideoGames","request","then","response","console","log","data","catch","error"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,IAAMC,OAAO,GAAG,wDAAhB;AAEA,IAAMC,GAAG,GAAG,oDAAZ,C,CAGA;;AAGA,IAAMC,OAAO,GAAG;AACdC,EAAAA,MAAM,EAAE,KADM;AAEdC,EAAAA,GAAG,EAAEJ,OAFS;AAGdK,EAAAA,OAAO,EAAE;AACP,sBAAkBJ,GADX;AAEP,uBAAmB;AAFZ;AAHK,CAAhB;AAUA,eAAe;AACbK,EAAAA,aAAa;AAAA,kFAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+CACPP,KAAK,CAACQ,OAAN,CAAcL,OAAd,EAAuBM,IAAvB,CAA4B,UAAUC,QAAV,EAAoB;AAEzDC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACA,eAHS,EAGPC,KAHO,CAGD,UAAUC,KAAV,EAAiB;AACzBJ,gBAAAA,OAAO,CAACI,KAAR,CAAcA,KAAd;AACA,eALS,CADO;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AADA,CAAf","sourcesContent":["import axios from \"axios\";\n\nconst BASEURL = \"https://rawg-video-games-database.p.rapidapi.com/games\"\n\nconst KEY = \"30de55f9a4mshf984d53ea08b7a7p1e945fjsnab7068fa0cce\"\n\n\n// Export an object containing methods we'll use for accessing the Dog.Ceo API\n\n\nconst options = {\n  method: 'GET',\n  url: BASEURL,\n  headers: {\n    'x-rapidapi-key': KEY,\n    'x-rapidapi-host': 'rawg-video-games-database.p.rapidapi.com'\n  }\n};\n\n\nexport default {\n  getVideoGames: async function() {\n   return axios.request(options).then(function (response) {\n    \n\tconsole.log(response.data);\n}).catch(function (error) {\n\tconsole.error(error);\n});\n     \n    \n    \n  }\n};\n"]},"metadata":{},"sourceType":"module"}